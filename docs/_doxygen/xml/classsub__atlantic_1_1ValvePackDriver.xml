<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classsub__atlantic_1_1ValvePackDriver" kind="class" language="C++" prot="public">
    <compoundname>sub_atlantic::ValvePackDriver</compoundname>
    <basecompoundref prot="public" virt="non-virtual">rclcpp::Node</basecompoundref>
    <includes local="no">valve_pack.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsub__atlantic_1_1ValvePackDriver_1ab77b58033abf4bc6d8d93ab4098f7784" prot="protected" static="no" mutable="no">
        <type>boost::asio::io_service</type>
        <definition>boost::asio::io_service sub_atlantic::ValvePackDriver::io</definition>
        <argsstring></argsstring>
        <name>io</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="31" column="27" bodyfile="sub_atlantic/include/sub_atlantic/valve_pack.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsub__atlantic_1_1ValvePackDriver_1a48c7aafc7079532d8c0ed8c0eaa032f2" prot="protected" static="no" mutable="no">
        <type>boost::asio::serial_port</type>
        <definition>boost::asio::serial_port sub_atlantic::ValvePackDriver::serial</definition>
        <argsstring></argsstring>
        <name>serial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="32" column="28" bodyfile="sub_atlantic/include/sub_atlantic/valve_pack.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsub__atlantic_1_1ValvePackDriver_1ac0d2f922e38dab17660a54c96ad32b64" prot="protected" static="no" mutable="no">
        <type>rclcpp::Subscription&lt; sub_atlantic_interfaces::msg::ValveCmd &gt;::SharedPtr</type>
        <definition>rclcpp::Subscription&lt;sub_atlantic_interfaces::msg::ValveCmd&gt;::SharedPtr sub_atlantic::ValvePackDriver::valve_pack_subscription_</definition>
        <argsstring></argsstring>
        <name>valve_pack_subscription_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="33" column="36" bodyfile="sub_atlantic/include/sub_atlantic/valve_pack.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1a2ee13c992ff0f261cffa3a9cc5fc348e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NS_HEAD ValvePackDriver::ValvePackDriver</definition>
        <argsstring>()</argsstring>
        <name>ValvePackDriver</name>
        <briefdescription>
<para>Constructor for the <ref refid="classsub__atlantic_1_1ValvePackDriver" kindref="compound">ValvePackDriver</ref> class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="28" column="3" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="5" bodyend="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1ade64443fd056bd3ca176168d24f133c2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ValvePackDriver::initializeParameters</definition>
        <argsstring>()</argsstring>
        <name>initializeParameters</name>
        <briefdescription>
<para>Initializes parameters from ROS2 parameter server. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="38" column="8" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="19" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1aeb36d62c67b751933353df048c6dbb20" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ValvePackDriver::valveCmdCallback</definition>
        <argsstring>(const sub_atlantic_interfaces::msg::ValveCmd::SharedPtr msg)</argsstring>
        <name>valveCmdCallback</name>
        <param>
          <type>const sub_atlantic_interfaces::msg::ValveCmd::SharedPtr</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Callback function for ValveCmd messages. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Shared pointer to the received ValveCmd message. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="45" column="8" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="31" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1a400f3072fb38f50c108ddd60a13d915d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ValvePackDriver::connectSerial</definition>
        <argsstring>(int baud_rate, std::string device_address)</argsstring>
        <name>connectSerial</name>
        <param>
          <type>int</type>
          <declname>baud_rate</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>device_address</declname>
        </param>
        <briefdescription>
<para>Connects to the serial port with the specified settings. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baud_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>Baud rate for serial communication. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_address</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the serial device. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if connection is successful, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="54" column="8" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="47" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1a6d5b62ab2d0f3cb42b6cd9c49f26d2a0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::uint16_t</type>
        <definition>std::uint16_t ValvePackDriver::calculateCRC16</definition>
        <argsstring>(const std::vector&lt; unsigned char &gt; &amp;data)</argsstring>
        <name>calculateCRC16</name>
        <param>
          <type>const std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Calculates the CRC-16 checksum for a given data vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of unsigned char containing the data for CRC calculation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The computed CRC-16 checksum. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="62" column="17" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1a7a0c69c185a1c72e74213790ef094fec" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ValvePackDriver::splitBytes</definition>
        <argsstring>(std::uint16_t crc, unsigned char &amp;high_byte, unsigned char &amp;low_byte)</argsstring>
        <name>splitBytes</name>
        <param>
          <type>std::uint16_t</type>
          <declname>crc</declname>
        </param>
        <param>
          <type>unsigned char &amp;</type>
          <declname>high_byte</declname>
        </param>
        <param>
          <type>unsigned char &amp;</type>
          <declname>low_byte</declname>
        </param>
        <briefdescription>
<para>Splits a 16-bit word into high and low bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>crc</parametername>
</parameternamelist>
<parameterdescription>
<para>16-bit word to be split. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>high_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to store the high byte. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>low_byte</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to store the low byte. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="71" column="8" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1a8910d84d7d117cfdd469430f5fad17c0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ValvePackDriver::changeBit</definition>
        <argsstring>(uint8_t &amp;byte, uint8_t bit, bool value)</argsstring>
        <name>changeBit</name>
        <param>
          <type>uint8_t &amp;</type>
          <declname>byte</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>bit</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Changes the state of a specific bit in a byte. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the byte whose bit is to be modified. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bit</parametername>
</parameternamelist>
<parameterdescription>
<para>Position of the bit to be changed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean value to set the specified bit to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="80" column="8" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="72" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1aaa870ad816f20c5413d8819a58b7b4ba" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t ValvePackDriver::findSubstitutionCharacter</definition>
        <argsstring>(const std::vector&lt; uint8_t &gt; &amp;frame)</argsstring>
        <name>findSubstitutionCharacter</name>
        <param>
          <type>const std::vector&lt; uint8_t &gt; &amp;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Finds a suitable substitution character for a frame that is not the end-of-frame character 0xAA. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>The frame data as a vector of bytes (uint8_t). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t The substitution character that can be safely used in the frame. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>If no suitable substitution character is found. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="89" column="11" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="80" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1aa77e72087e7e39a04f27399057dbd08a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ValvePackDriver::replaceSubstitutionCharacter</definition>
        <argsstring>(std::vector&lt; unsigned char &gt; &amp;data, unsigned char characterToReplace, unsigned char substitutionCharacter)</argsstring>
        <name>replaceSubstitutionCharacter</name>
        <param>
          <type>std::vector&lt; unsigned char &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>characterToReplace</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>substitutionCharacter</declname>
        </param>
        <briefdescription>
<para>Replaces a specific character in a data vector with a substitution character. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to a vector of unsigned char. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>characterToReplace</parametername>
</parameternamelist>
<parameterdescription>
<para>Character in the data vector to be replaced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>substitutionCharacter</parametername>
</parameternamelist>
<parameterdescription>
<para>Character to replace the specified character. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="98" column="8" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classsub__atlantic_1_1ValvePackDriver_1ae498411b30c872a5e9a6cd6882265310" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt; uint8_t &gt; ValvePackDriver::standardControlMsg</definition>
        <argsstring>(uint8_t pwm1_8=0x00, uint8_t pwm9_16=0x00, uint8_t pwm_open_loop=0x00)</argsstring>
        <name>standardControlMsg</name>
        <param>
          <type>uint8_t</type>
          <declname>pwm1_8</declname>
          <defval>0x00</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pwm9_16</declname>
          <defval>0x00</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pwm_open_loop</declname>
          <defval>0x00</defval>
        </param>
        <briefdescription>
<para>Constructs a standard control message for the valve pack board. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pwm1_8</parametername>
</parameternamelist>
<parameterdescription>
<para>Control byte for PWM1-8 (defaults to 0x00, all off). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pwm9_16</parametername>
</parameternamelist>
<parameterdescription>
<para>Control byte for PWM9-16 (defaults to 0x00, all off). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pwm_open_loop</parametername>
</parameternamelist>
<parameterdescription>
<para>Control byte for PWM1-16 Open Loop On/Off (defaults to 0x00). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;uint8_t&gt; The constructed message as a vector of bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="110" column="15" bodyfile="sub_atlantic/src/valve_pack.cpp" bodystart="100" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for controlling a valve pack using ROS2 and serial communication. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>sub_atlantic::ValvePackDriver</label>
        <link refid="classsub__atlantic_1_1ValvePackDriver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rclcpp::Node</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>sub_atlantic::ValvePackDriver</label>
        <link refid="classsub__atlantic_1_1ValvePackDriver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rclcpp::Node</label>
      </node>
    </collaborationgraph>
    <location file="sub_atlantic/include/sub_atlantic/valve_pack.hpp" line="22" column="1" bodyfile="sub_atlantic/include/sub_atlantic/valve_pack.hpp" bodystart="23" bodyend="112"/>
    <listofallmembers>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1a6d5b62ab2d0f3cb42b6cd9c49f26d2a0" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>calculateCRC16</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1a8910d84d7d117cfdd469430f5fad17c0" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>changeBit</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1a400f3072fb38f50c108ddd60a13d915d" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>connectSerial</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1aaa870ad816f20c5413d8819a58b7b4ba" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>findSubstitutionCharacter</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1ade64443fd056bd3ca176168d24f133c2" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>initializeParameters</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1ab77b58033abf4bc6d8d93ab4098f7784" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>io</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1aa77e72087e7e39a04f27399057dbd08a" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>replaceSubstitutionCharacter</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1a48c7aafc7079532d8c0ed8c0eaa032f2" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>serial</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1a7a0c69c185a1c72e74213790ef094fec" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>splitBytes</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1ae498411b30c872a5e9a6cd6882265310" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>standardControlMsg</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1ac0d2f922e38dab17660a54c96ad32b64" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>valve_pack_subscription_</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1aeb36d62c67b751933353df048c6dbb20" prot="protected" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>valveCmdCallback</name></member>
      <member refid="classsub__atlantic_1_1ValvePackDriver_1a2ee13c992ff0f261cffa3a9cc5fc348e" prot="public" virt="non-virtual"><scope>sub_atlantic::ValvePackDriver</scope><name>ValvePackDriver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
